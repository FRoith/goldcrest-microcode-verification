
#lang rosette

(require "model.rkt")

(define microcode
  (list
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 SRC2 (bv  255 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq IMMI SRC2 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 SRC2 (bv    1 8))
    (subleq RVPC TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 SRC2 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC2 SRC2 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq RVPC TMP1 (bv    1 8))
    (subleq TMP0 RVPC (bv    1 8))
    (subleq TMP1 SRC2 (bv    1 8))
    (subleq NEXT SRC2 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq TMP2 TMP2 (bv    1 8))
    (subleq TMP3 TMP3 (bv    1 8))
    (subleq SRC2 TMP1 (bv    1 8))
    (subleq TMP1 IMMI (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq WORD TMP0 (bv    1 8))
    (subleq INCR TMP0 (bv    1 8))
    (subleq IMMI TMP3 (bv    1 8))
    (subleq TMP2 TMP2 (bv    1 8))
    (subleq IMMI TMP2 (bv    1 8))
    (subleq TMP2 IMMI (bv    1 8))
    (subleq INCR TMP0 (bv   -3 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    2 8))
    (subleq INCR TMP3 (bv    1 8))
    (subleq IMMI IMMI (bv    1 8))
    (subleq TMP3 IMMI (bv    1 8))
    (subleq IMMI TMP1 (bv    1 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq RVPC TMP0 (bv    1 8))
    (subleq RVPC RVPC (bv    1 8))
    (subleq TMP1 RVPC (bv    1 8))
    (subleq SRC2 SRC2 (bv    1 8))
    (subleq TMP0 SRC2 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv    1 8))
    (subleq SRC1 SRC2 (bv    2 8))
    (subleq TMP0 TMP0 (bv    2 8))
    (subleq TMP1 SRC1 (bv    2 8))
    (subleq NEXT RVPC (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 RVPC (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv    1 8))
    (subleq SRC1 SRC2 (bv    2 8))
    (subleq TMP0 TMP0 (bv    2 8))
    (subleq TMP1 SRC1 (bv    4 8))
    (subleq TMP2 TMP2 (bv    1 8))
    (subleq IMMI TMP2 (bv    1 8))
    (subleq TMP2 RVPC (bv  255 8))
    (subleq NEXT RVPC (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC1 TMP0 (bv    3 8))
    (subleq SRC2 TMP1 (bv    5 8))
    (subleq TMP1 TMP1 (bv    3 8))
    (subleq SRC2 TMP1 (bv    2 8))
    (subleq TMP1 TMP1 (bv    5 8))
    (subleq SRC2 SRC1 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 RVPC (bv  255 8))
    (subleq NEXT RVPC (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC1 TMP0 (bv    3 8))
    (subleq SRC2 TMP1 (bv    5 8))
    (subleq TMP1 TMP1 (bv    3 8))
    (subleq SRC2 TMP1 (bv    2 8))
    (subleq TMP1 TMP1 (bv    3 8))
    (subleq SRC2 SRC1 (bv    2 8))
    (subleq NEXT RVPC (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 RVPC (bv  255 8))
    (subleq TMP2 TMP2 (bv    1 8))
    (subleq WORD TMP2 (bv    1 8))
    (subleq TMP1 TMP1 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    4 8))
    (subleq TMP0 TMP0 (bv    5 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    2 8))
    (subleq INCR TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 IMMI (bv    1 8))
    (subleq INCR TMP2 (bv  -17 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv  255 8))
    (subleq TMP2 TMP2 (bv    1 8))
    (subleq WORD TMP2 (bv    1 8))
    (subleq TMP1 TMP1 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    3 8))
    (subleq INCR TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    5 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    2 8))
    (subleq INCR TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 IMMI (bv    1 8))
    (subleq INCR TMP2 (bv  -16 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv  255 8))
    (subleq TMP2 TMP2 (bv    1 8))
    (subleq WORD TMP2 (bv    1 8))
    (subleq TMP1 TMP1 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    2 8))
    (subleq INCR TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 IMMI (bv    1 8))
    (subleq INCR TMP2 (bv  -14 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP0 TMP1 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC2 TMP1 (bv    1 8))
    (subleq SRC2 SRC2 (bv    1 8))
    (subleq IMMI TMP0 (bv    4 8))
    (subleq TMP1 SRC2 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC2 TMP1 (bv    1 8))
    (subleq INCR TMP0 (bv   -3 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP1 SRC2 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC1 SRC1 (bv    1 8))
    (subleq SRC2 TMP0 (bv    5 8))
    (subleq TMP0 SRC1 (bv    1 8))
    (subleq SRC2 SRC2 (bv    1 8))
    (subleq CONE SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    7 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC1 SRC1 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 SRC1 (bv    1 8))
    (subleq SRC2 SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP5 TMP5 (bv    1 8))
    (subleq WORD TMP5 (bv    1 8))
    (subleq IMMI TMP0 (bv    1 8))
    (subleq TMP0 TMP5 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC1 TMP0 (bv    6 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv    1 8))
    (subleq INCR SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP5 TMP0 (bv    6 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC1 TMP0 (bv    1 8))
    (subleq TMP0 SRC1 (bv    1 8))
    (subleq INCR TMP5 (bv    1 8))
    (subleq TMP0 TMP0 (bv  -16 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP0 SRC2 (bv  255 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq IMMI TMP0 (bv    4 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    7 8))
    (subleq TMP0 TMP0 (bv    5 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq SRC2 TMP0 (bv    3 8))
    (subleq TMP0 TMP0 (bv    4 8))
    (subleq TMP1 TMP1 (bv    1 8))
    (subleq SRC2 IMMI (bv    2 8))
    (subleq CONE TMP1 (bv    1 8))
    (subleq TMP0 TMP0 (bv    1 8))
    (subleq NEXT RVPC (bv    1 8))
    (subleq TMP1 TMP0 (bv  255 8))))

(define    SRL-PC (bv 181 9))
(define    XOR-PC (bv  95 9))
(define   SRAI-PC (bv 174 9))
(define   SRLI-PC (bv 181 9))
(define    SLL-PC (bv 163 9))
(define   ANDI-PC (bv 142 9))
(define   ADDI-PC (bv   0 9))
(define    BLT-PC (bv  78 9))
(define   BLTU-PC (bv  71 9))
(define   XORI-PC (bv  95 9))
(define    LBU-PC (bv   0 9))
(define   SLTI-PC (bv 220 9))
(define   BGEU-PC (bv  83 9))
(define    LHU-PC (bv   0 9))
(define     SW-PC (bv   0 9))
(define    SLT-PC (bv 220 9))
(define    ADD-PC (bv   0 9))
(define    BEQ-PC (bv  49 9))
(define    SRA-PC (bv 174 9))
(define     LB-PC (bv   0 9))
(define     SB-PC (bv   0 9))
(define     LW-PC (bv   0 9))
(define  SLTIU-PC (bv 211 9))
(define     LH-PC (bv   0 9))
(define    BNE-PC (bv  60 9))
(define    SUB-PC (bv   4 9))
(define    BGE-PC (bv  90 9))
(define    ORI-PC (bv 119 9))
(define    JAL-PC (bv  14 9))
(define     OR-PC (bv 119 9))
(define  AUIPC-PC (bv   6 9))
(define    AND-PC (bv 142 9))
(define   SLTU-PC (bv 211 9))
(define    LUI-PC (bv   0 9))
(define     SH-PC (bv   0 9))
(define   SLLI-PC (bv 163 9))
(define   JALR-PC (bv  22 9))

(provide microcode LB-PC LH-PC LW-PC LBU-PC LHU-PC SB-PC SH-PC SW-PC ADDI-PC ADD-PC LUI-PC SUB-PC AUIPC-PC JAL-PC JALR-PC BEQ-PC BNE-PC BLTU-PC BLT-PC BGEU-PC BGE-PC XORI-PC XOR-PC ORI-PC OR-PC ANDI-PC AND-PC SLLI-PC SLL-PC SRAI-PC SRA-PC SRLI-PC SRL-PC SLTI-PC SLT-PC SLTIU-PC SLTU-PC)        

